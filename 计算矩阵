#include <bits/stdc++.h>

#define _fo(i, a, b) for(int (i)=(a);i<(b);i++)
#define _FO(i, a, b) for(int (i)=(a);i<=(b);i++)
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
int const N=4;
int res=0,t[N],q[N];
void merge_sort(int l,int r)
{
    if(l>=r) return;

    int mid=l+r>>1;
    merge_sort(l,mid),merge_sort(mid+1,r);//  “分”

    int k=0,i=l,j=mid+1;
    while(i<=mid&&j<=r)
    {
        if(q[i]<=q[j]) t[k++]=q[i++];
        else
        {
            t[k++]=q[j++];
            res+=mid-i+1;//  “治”
        }
    }
    while(i<=mid) t[k++]=q[i++];//收尾：假如左端或者右端先填完了，得把另一端的数都加上。
    while(j<=r) t[k++]=q[j++];

    for(i=l,j=0;i<=r;i++,j++) q[i]=t[j];
}
int main() {
    ll ans1=0;
    int num[N]={1,2,3,4};
    int s[N][N] ={1,2,3,4,
                  -2,1,-4,3,
                  3,-4,-1,2,
                  4,3,-2,-1};
    do {
        for (int i = 0; i < N; ++i) {
            q[i]=num[i];
        }
        res=0;

        int ans=1;
        merge_sort(0,N-1);
        if(res%2!=0){
            cout<<"-";
            ans=-1;
        }
        for (int i = 0; i < N; ++i) {
            if(i!=0)
                cout<<"*";
            cout<<s[i][num[i]-1];
            ans*=s[i][num[i]-1];
        }
        ans1 += ans;
        cout<<"="<<ans;
        cout<<endl;
    }while (std::next_permutation(num,num+N));
    cout<<ans1;
}
